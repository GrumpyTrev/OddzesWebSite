@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Documents";
    Database db = Database.Open( "StarterSite" );
    IEnumerable<dynamic> documents = db.Query( "SELECT * FROM Documents ORDER BY Id" );

    // Put the Id of the documents into an array
    int[] indexes = new int[ documents.Count() ];
    int documentIndex = 0;
    foreach ( dynamic document in documents )
    {
        indexes[ documentIndex++ ] = document.Id;
    }

    // If this is a POST request, validate and process data
    if ( IsPost == true )
    {
        // Check for 'action' values first
        if ( Request[ "deleteButton" ] != null )
        {
            // Determine which documents have been selected and delete them

            // Extract the selected indexes from the request
            foreach ( string selection in Request[ "selected" ].Split( ',' ) )
            {
                int selectedIndex = indexes[ selection.AsInt() ];

                // Delete the content first and then the index
                db.Execute( "DELETE FROM DocumentStorage WHERE Id=@0", selectedIndex );
                db.Execute( "DELETE FROM Documents WHERE Id=@0", selectedIndex );
            }

            Response.Redirect( Request.RawUrl );
        }
        else if ( Request[ "updateButton" ] != null)
        {
            // Get the identity of the selected document and pass to the Update page
            int selectedIndex = indexes[ Request[ "selected" ].AsInt() ];

            Response.Redirect( Href( "~/UpdateDocument", selectedIndex ) );
        }
    }
}

@section featured { 
<section class="featured">
    <div class="content-wrapper">
        <hgroup class="title">
            <h1>@Page.Title.</h1>
        </hgroup>
        <p>
            The following documents (mainly rules) are available to view.
        </p>
    </div>
</section>
}

<script type="text/javascript">

    //
    // Hide or show the delete and update buttons according to how many documents have been selected
    // Show the delete button if one or more documents have been selected
    // Show the update button if a single document has been selected
    //
    function OnDocumentSelected()
    {
        var selectedCount = CountSelectedDocuments();

        document.documentForm.updateButton.style.visibility = (selectedCount == 1) ? "visible" : "hidden";
        document.documentForm.deleteButton.style.visibility = (selectedCount > 0) ? "visible" : "hidden";
    }

    // 
    // Count the number of selected documents
    //
    function CountSelectedDocuments()
    {
        var selectedCount = 0;

        for (var index = 0; index < document.documentForm.selected.length; index++)
        {
            if (document.documentForm.selected[index].checked == true)
            {
                selectedCount++;
            }
        }

        return selectedCount;
    }

    //
    // Set the delete confirmation string according to the number of items selected
    //
    function DeleteConfirmation()
    {
        return (CountSelectedDocuments() == 1) ? "Do you really want to delete this document?" : "Do you really want to delete these documents?";
    }

</script>
<form name="documentForm" method="post">
    <table>
        @{  int index = 0;

            foreach ( dynamic document in documents )
            {
                <tr>
                    <td>
                        @if ( Roles.IsUserInRole( "Admin" ) == true )
                        {
                            <input type=checkbox name=selected value="@index" onchange="OnDocumentSelected();">
                        }
                        <a href="@Href( "~/DisplayPage", document.Id, document.Title )">@document.Title</a>
                    </td>
                </tr>

                index++;
            }
        }

    </table>
    
    @if ( Roles.IsUserInRole( "Admin" ) == true )
    {
        <a href="~/AddDocument" class="btn">Add document</a>
        <input type="submit" value="Delete document" id="submit" class="hiddenBtn" name="deleteButton" onclick="return confirm( DeleteConfirmation() );" />
        <input type="submit" value="Update document" id="submit" class="hiddenBtn" name="updateButton" />
    }
</form>