#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalendarExport
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C:\\Users\\Grumpy\\AppData\\Local\\Temp\\StarterSite.sdf")]
	public partial class StarterSiteContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAverage(Average instance);
    partial void UpdateAverage(Average instance);
    partial void DeleteAverage(Average instance);
    partial void InsertCompetition(Competition instance);
    partial void UpdateCompetition(Competition instance);
    partial void DeleteCompetition(Competition instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertDocumentStorage(DocumentStorage instance);
    partial void UpdateDocumentStorage(DocumentStorage instance);
    partial void DeleteDocumentStorage(DocumentStorage instance);
    partial void InsertGame(Game instance);
    partial void UpdateGame(Game instance);
    partial void DeleteGame(Game instance);
    partial void InsertScore(Score instance);
    partial void UpdateScore(Score instance);
    partial void DeleteScore(Score instance);
    partial void InsertSet(Set instance);
    partial void UpdateSet(Set instance);
    partial void DeleteSet(Set instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void InsertWebpages_Membership(Webpages_Membership instance);
    partial void UpdateWebpages_Membership(Webpages_Membership instance);
    partial void DeleteWebpages_Membership(Webpages_Membership instance);
    partial void InsertWebpages_OAuthMembership(Webpages_OAuthMembership instance);
    partial void UpdateWebpages_OAuthMembership(Webpages_OAuthMembership instance);
    partial void DeleteWebpages_OAuthMembership(Webpages_OAuthMembership instance);
    partial void InsertWebpages_Role(Webpages_Role instance);
    partial void UpdateWebpages_Role(Webpages_Role instance);
    partial void DeleteWebpages_Role(Webpages_Role instance);
    partial void InsertWebpages_UsersInRole(Webpages_UsersInRole instance);
    partial void UpdateWebpages_UsersInRole(Webpages_UsersInRole instance);
    partial void DeleteWebpages_UsersInRole(Webpages_UsersInRole instance);
    #endregion
		
		public StarterSiteContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StarterSiteContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StarterSiteContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StarterSiteContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Average> Averages
		{
			get
			{
				return this.GetTable<Average>();
			}
		}
		
		public System.Data.Linq.Table<Competition> Competitions
		{
			get
			{
				return this.GetTable<Competition>();
			}
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<DocumentStorage> DocumentStorages
		{
			get
			{
				return this.GetTable<DocumentStorage>();
			}
		}
		
		public System.Data.Linq.Table<Game> Games
		{
			get
			{
				return this.GetTable<Game>();
			}
		}
		
		public System.Data.Linq.Table<Score> Scores
		{
			get
			{
				return this.GetTable<Score>();
			}
		}
		
		public System.Data.Linq.Table<Set> Sets
		{
			get
			{
				return this.GetTable<Set>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<Webpages_Membership> Webpages_Memberships
		{
			get
			{
				return this.GetTable<Webpages_Membership>();
			}
		}
		
		public System.Data.Linq.Table<Webpages_OAuthMembership> Webpages_OAuthMemberships
		{
			get
			{
				return this.GetTable<Webpages_OAuthMembership>();
			}
		}
		
		public System.Data.Linq.Table<Webpages_Role> Webpages_Roles
		{
			get
			{
				return this.GetTable<Webpages_Role>();
			}
		}
		
		public System.Data.Linq.Table<Webpages_UsersInRole> Webpages_UsersInRoles
		{
			get
			{
				return this.GetTable<Webpages_UsersInRole>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Average : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Player;
		
		private int _Legs;
		
		private int _Pins;
		
		private int _Game;
		
		private decimal _Avg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPlayerChanging(int value);
    partial void OnPlayerChanged();
    partial void OnLegsChanging(int value);
    partial void OnLegsChanged();
    partial void OnPinsChanging(int value);
    partial void OnPinsChanged();
    partial void OnGameChanging(int value);
    partial void OnGameChanged();
    partial void OnAvgChanging(decimal value);
    partial void OnAvgChanged();
    #endregion
		
		public Average()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Player", DbType="Int NOT NULL")]
		public int Player
		{
			get
			{
				return this._Player;
			}
			set
			{
				if ((this._Player != value))
				{
					this.OnPlayerChanging(value);
					this.SendPropertyChanging();
					this._Player = value;
					this.SendPropertyChanged("Player");
					this.OnPlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Legs", DbType="Int NOT NULL")]
		public int Legs
		{
			get
			{
				return this._Legs;
			}
			set
			{
				if ((this._Legs != value))
				{
					this.OnLegsChanging(value);
					this.SendPropertyChanging();
					this._Legs = value;
					this.SendPropertyChanged("Legs");
					this.OnLegsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pins", DbType="Int NOT NULL")]
		public int Pins
		{
			get
			{
				return this._Pins;
			}
			set
			{
				if ((this._Pins != value))
				{
					this.OnPinsChanging(value);
					this.SendPropertyChanging();
					this._Pins = value;
					this.SendPropertyChanged("Pins");
					this.OnPinsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game", DbType="Int NOT NULL")]
		public int Game
		{
			get
			{
				return this._Game;
			}
			set
			{
				if ((this._Game != value))
				{
					this.OnGameChanging(value);
					this.SendPropertyChanging();
					this._Game = value;
					this.SendPropertyChanged("Game");
					this.OnGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avg", DbType="Decimal(8,4) NOT NULL")]
		public decimal Avg
		{
			get
			{
				return this._Avg;
			}
			set
			{
				if ((this._Avg != value))
				{
					this.OnAvgChanging(value);
					this.SendPropertyChanging();
					this._Avg = value;
					this.SendPropertyChanged("Avg");
					this.OnAvgChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Competition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<bool> _Matchplay;
		
		private bool _Locked;
		
		private System.Nullable<bool> _KeepAverages;
		
		private bool _Archive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMatchplayChanging(System.Nullable<bool> value);
    partial void OnMatchplayChanged();
    partial void OnLockedChanging(bool value);
    partial void OnLockedChanged();
    partial void OnKeepAveragesChanging(System.Nullable<bool> value);
    partial void OnKeepAveragesChanged();
    partial void OnArchiveChanging(bool value);
    partial void OnArchiveChanged();
    #endregion
		
		public Competition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matchplay", DbType="Bit")]
		public System.Nullable<bool> Matchplay
		{
			get
			{
				return this._Matchplay;
			}
			set
			{
				if ((this._Matchplay != value))
				{
					this.OnMatchplayChanging(value);
					this.SendPropertyChanging();
					this._Matchplay = value;
					this.SendPropertyChanged("Matchplay");
					this.OnMatchplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit NOT NULL")]
		public bool Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeepAverages", DbType="Bit")]
		public System.Nullable<bool> KeepAverages
		{
			get
			{
				return this._KeepAverages;
			}
			set
			{
				if ((this._KeepAverages != value))
				{
					this.OnKeepAveragesChanging(value);
					this.SendPropertyChanging();
					this._KeepAverages = value;
					this.SendPropertyChanged("KeepAverages");
					this.OnKeepAveragesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archive", DbType="Bit NOT NULL")]
		public bool Archive
		{
			get
			{
				return this._Archive;
			}
			set
			{
				if ((this._Archive != value))
				{
					this.OnArchiveChanging(value);
					this.SendPropertyChanging();
					this._Archive = value;
					this.SendPropertyChanged("Archive");
					this.OnArchiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Documents")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    #endregion
		
		public Document()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class DocumentStorage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Data.Linq.Binary _Content;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnContentChanging(System.Data.Linq.Binary value);
    partial void OnContentChanged();
    #endregion
		
		public DocumentStorage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Game : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Opponents;
		
		private System.DateTime _Date;
		
		private int _Competition;
		
		private System.Nullable<int> _Set1;
		
		private System.Nullable<int> _Set2;
		
		private System.Nullable<bool> _Late;
		
		private System.Nullable<bool> _InProgress;
		
		private int _Us;
		
		private int _Them;
		
		private bool _Complete;
		
		private System.Nullable<bool> _Lane;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOpponentsChanging(string value);
    partial void OnOpponentsChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCompetitionChanging(int value);
    partial void OnCompetitionChanged();
    partial void OnSet1Changing(System.Nullable<int> value);
    partial void OnSet1Changed();
    partial void OnSet2Changing(System.Nullable<int> value);
    partial void OnSet2Changed();
    partial void OnLateChanging(System.Nullable<bool> value);
    partial void OnLateChanged();
    partial void OnInProgressChanging(System.Nullable<bool> value);
    partial void OnInProgressChanged();
    partial void OnUsChanging(int value);
    partial void OnUsChanged();
    partial void OnThemChanging(int value);
    partial void OnThemChanged();
    partial void OnCompleteChanging(bool value);
    partial void OnCompleteChanged();
    partial void OnLaneChanging(System.Nullable<bool> value);
    partial void OnLaneChanged();
    #endregion
		
		public Game()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opponents", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Opponents
		{
			get
			{
				return this._Opponents;
			}
			set
			{
				if ((this._Opponents != value))
				{
					this.OnOpponentsChanging(value);
					this.SendPropertyChanging();
					this._Opponents = value;
					this.SendPropertyChanged("Opponents");
					this.OnOpponentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Competition", DbType="Int NOT NULL")]
		public int Competition
		{
			get
			{
				return this._Competition;
			}
			set
			{
				if ((this._Competition != value))
				{
					this.OnCompetitionChanging(value);
					this.SendPropertyChanging();
					this._Competition = value;
					this.SendPropertyChanged("Competition");
					this.OnCompetitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set1", DbType="Int")]
		public System.Nullable<int> Set1
		{
			get
			{
				return this._Set1;
			}
			set
			{
				if ((this._Set1 != value))
				{
					this.OnSet1Changing(value);
					this.SendPropertyChanging();
					this._Set1 = value;
					this.SendPropertyChanged("Set1");
					this.OnSet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set2", DbType="Int")]
		public System.Nullable<int> Set2
		{
			get
			{
				return this._Set2;
			}
			set
			{
				if ((this._Set2 != value))
				{
					this.OnSet2Changing(value);
					this.SendPropertyChanging();
					this._Set2 = value;
					this.SendPropertyChanged("Set2");
					this.OnSet2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Late", DbType="Bit")]
		public System.Nullable<bool> Late
		{
			get
			{
				return this._Late;
			}
			set
			{
				if ((this._Late != value))
				{
					this.OnLateChanging(value);
					this.SendPropertyChanging();
					this._Late = value;
					this.SendPropertyChanged("Late");
					this.OnLateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InProgress", DbType="Bit")]
		public System.Nullable<bool> InProgress
		{
			get
			{
				return this._InProgress;
			}
			set
			{
				if ((this._InProgress != value))
				{
					this.OnInProgressChanging(value);
					this.SendPropertyChanging();
					this._InProgress = value;
					this.SendPropertyChanged("InProgress");
					this.OnInProgressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Us", DbType="Int NOT NULL")]
		public int Us
		{
			get
			{
				return this._Us;
			}
			set
			{
				if ((this._Us != value))
				{
					this.OnUsChanging(value);
					this.SendPropertyChanging();
					this._Us = value;
					this.SendPropertyChanged("Us");
					this.OnUsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Them", DbType="Int NOT NULL")]
		public int Them
		{
			get
			{
				return this._Them;
			}
			set
			{
				if ((this._Them != value))
				{
					this.OnThemChanging(value);
					this.SendPropertyChanging();
					this._Them = value;
					this.SendPropertyChanged("Them");
					this.OnThemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complete", DbType="Bit NOT NULL")]
		public bool Complete
		{
			get
			{
				return this._Complete;
			}
			set
			{
				if ((this._Complete != value))
				{
					this.OnCompleteChanging(value);
					this.SendPropertyChanging();
					this._Complete = value;
					this.SendPropertyChanged("Complete");
					this.OnCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lane", DbType="Bit")]
		public System.Nullable<bool> Lane
		{
			get
			{
				return this._Lane;
			}
			set
			{
				if ((this._Lane != value))
				{
					this.OnLaneChanging(value);
					this.SendPropertyChanging();
					this._Lane = value;
					this.SendPropertyChanged("Lane");
					this.OnLaneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Score : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Player;
		
		private int _Leg1;
		
		private int _Leg2;
		
		private int _Leg3;
		
		private decimal _Points1;
		
		private decimal _Points2;
		
		private decimal _Points3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPlayerChanging(int value);
    partial void OnPlayerChanged();
    partial void OnLeg1Changing(int value);
    partial void OnLeg1Changed();
    partial void OnLeg2Changing(int value);
    partial void OnLeg2Changed();
    partial void OnLeg3Changing(int value);
    partial void OnLeg3Changed();
    partial void OnPoints1Changing(decimal value);
    partial void OnPoints1Changed();
    partial void OnPoints2Changing(decimal value);
    partial void OnPoints2Changed();
    partial void OnPoints3Changing(decimal value);
    partial void OnPoints3Changed();
    #endregion
		
		public Score()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Player", DbType="Int NOT NULL")]
		public int Player
		{
			get
			{
				return this._Player;
			}
			set
			{
				if ((this._Player != value))
				{
					this.OnPlayerChanging(value);
					this.SendPropertyChanging();
					this._Player = value;
					this.SendPropertyChanged("Player");
					this.OnPlayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leg1", DbType="Int NOT NULL")]
		public int Leg1
		{
			get
			{
				return this._Leg1;
			}
			set
			{
				if ((this._Leg1 != value))
				{
					this.OnLeg1Changing(value);
					this.SendPropertyChanging();
					this._Leg1 = value;
					this.SendPropertyChanged("Leg1");
					this.OnLeg1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leg2", DbType="Int NOT NULL")]
		public int Leg2
		{
			get
			{
				return this._Leg2;
			}
			set
			{
				if ((this._Leg2 != value))
				{
					this.OnLeg2Changing(value);
					this.SendPropertyChanging();
					this._Leg2 = value;
					this.SendPropertyChanged("Leg2");
					this.OnLeg2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leg3", DbType="Int NOT NULL")]
		public int Leg3
		{
			get
			{
				return this._Leg3;
			}
			set
			{
				if ((this._Leg3 != value))
				{
					this.OnLeg3Changing(value);
					this.SendPropertyChanging();
					this._Leg3 = value;
					this.SendPropertyChanged("Leg3");
					this.OnLeg3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points1", DbType="Decimal(2,1) NOT NULL")]
		public decimal Points1
		{
			get
			{
				return this._Points1;
			}
			set
			{
				if ((this._Points1 != value))
				{
					this.OnPoints1Changing(value);
					this.SendPropertyChanging();
					this._Points1 = value;
					this.SendPropertyChanged("Points1");
					this.OnPoints1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points2", DbType="Decimal(2,1) NOT NULL")]
		public decimal Points2
		{
			get
			{
				return this._Points2;
			}
			set
			{
				if ((this._Points2 != value))
				{
					this.OnPoints2Changing(value);
					this.SendPropertyChanging();
					this._Points2 = value;
					this.SendPropertyChanged("Points2");
					this.OnPoints2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points3", DbType="Decimal(2,1) NOT NULL")]
		public decimal Points3
		{
			get
			{
				return this._Points3;
			}
			set
			{
				if ((this._Points3 != value))
				{
					this.OnPoints3Changing(value);
					this.SendPropertyChanging();
					this._Points3 = value;
					this.SendPropertyChanged("Points3");
					this.OnPoints3Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sets")]
	public partial class Set : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Scores1;
		
		private int _Scores2;
		
		private int _Scores3;
		
		private int _Scores4;
		
		private int _Scores5;
		
		private int _Scores6;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnScores1Changing(int value);
    partial void OnScores1Changed();
    partial void OnScores2Changing(int value);
    partial void OnScores2Changed();
    partial void OnScores3Changing(int value);
    partial void OnScores3Changed();
    partial void OnScores4Changing(int value);
    partial void OnScores4Changed();
    partial void OnScores5Changing(int value);
    partial void OnScores5Changed();
    partial void OnScores6Changing(int value);
    partial void OnScores6Changed();
    #endregion
		
		public Set()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scores1", DbType="Int NOT NULL")]
		public int Scores1
		{
			get
			{
				return this._Scores1;
			}
			set
			{
				if ((this._Scores1 != value))
				{
					this.OnScores1Changing(value);
					this.SendPropertyChanging();
					this._Scores1 = value;
					this.SendPropertyChanged("Scores1");
					this.OnScores1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scores2", DbType="Int NOT NULL")]
		public int Scores2
		{
			get
			{
				return this._Scores2;
			}
			set
			{
				if ((this._Scores2 != value))
				{
					this.OnScores2Changing(value);
					this.SendPropertyChanging();
					this._Scores2 = value;
					this.SendPropertyChanged("Scores2");
					this.OnScores2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scores3", DbType="Int NOT NULL")]
		public int Scores3
		{
			get
			{
				return this._Scores3;
			}
			set
			{
				if ((this._Scores3 != value))
				{
					this.OnScores3Changing(value);
					this.SendPropertyChanging();
					this._Scores3 = value;
					this.SendPropertyChanged("Scores3");
					this.OnScores3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scores4", DbType="Int NOT NULL")]
		public int Scores4
		{
			get
			{
				return this._Scores4;
			}
			set
			{
				if ((this._Scores4 != value))
				{
					this.OnScores4Changing(value);
					this.SendPropertyChanging();
					this._Scores4 = value;
					this.SendPropertyChanged("Scores4");
					this.OnScores4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scores5", DbType="Int NOT NULL")]
		public int Scores5
		{
			get
			{
				return this._Scores5;
			}
			set
			{
				if ((this._Scores5 != value))
				{
					this.OnScores5Changing(value);
					this.SendPropertyChanging();
					this._Scores5 = value;
					this.SendPropertyChanged("Scores5");
					this.OnScores5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scores6", DbType="Int NOT NULL")]
		public int Scores6
		{
			get
			{
				return this._Scores6;
			}
			set
			{
				if ((this._Scores6 != value))
				{
					this.OnScores6Changing(value);
					this.SendPropertyChanging();
					this._Scores6 = value;
					this.SendPropertyChanged("Scores6");
					this.OnScores6Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Email;
		
		private int _UserId;
		
		private string _FullName;
		
		private string _TeamRole;
		
		private EntitySet<Webpages_UsersInRole> _Webpages_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnTeamRoleChanging(string value);
    partial void OnTeamRoleChanged();
    #endregion
		
		public UserProfile()
		{
			this._Webpages_UsersInRoles = new EntitySet<Webpages_UsersInRole>(new Action<Webpages_UsersInRole>(this.attach_Webpages_UsersInRoles), new Action<Webpages_UsersInRole>(this.detach_Webpages_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(4000)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamRole", DbType="NVarChar(50)")]
		public string TeamRole
		{
			get
			{
				return this._TeamRole;
			}
			set
			{
				if ((this._TeamRole != value))
				{
					this.OnTeamRoleChanging(value);
					this.SendPropertyChanging();
					this._TeamRole = value;
					this.SendPropertyChanged("TeamRole");
					this.OnTeamRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_UserId", Storage="_Webpages_UsersInRoles", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Webpages_UsersInRole> Webpages_UsersInRoles
		{
			get
			{
				return this._Webpages_UsersInRoles;
			}
			set
			{
				this._Webpages_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Webpages_UsersInRoles(Webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Webpages_UsersInRoles(Webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="webpages_Membership")]
	public partial class Webpages_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _ConfirmationToken;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _LastPasswordFailureDate;
		
		private int _PasswordFailuresSinceLastSuccess;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _PasswordChangedDate;
		
		private string _PasswordSalt;
		
		private string _PasswordVerificationToken;
		
		private System.Nullable<System.DateTime> _PasswordVerificationTokenExpirationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnConfirmationTokenChanging(string value);
    partial void OnConfirmationTokenChanged();
    partial void OnIsConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsConfirmedChanged();
    partial void OnLastPasswordFailureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordFailureDateChanged();
    partial void OnPasswordFailuresSinceLastSuccessChanging(int value);
    partial void OnPasswordFailuresSinceLastSuccessChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordChangedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordChangedDateChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnPasswordVerificationTokenChanging(string value);
    partial void OnPasswordVerificationTokenChanged();
    partial void OnPasswordVerificationTokenExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordVerificationTokenExpirationDateChanged();
    #endregion
		
		public Webpages_Membership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationToken", DbType="NVarChar(128)")]
		public string ConfirmationToken
		{
			get
			{
				return this._ConfirmationToken;
			}
			set
			{
				if ((this._ConfirmationToken != value))
				{
					this.OnConfirmationTokenChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationToken = value;
					this.SendPropertyChanged("ConfirmationToken");
					this.OnConfirmationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordFailureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordFailureDate
		{
			get
			{
				return this._LastPasswordFailureDate;
			}
			set
			{
				if ((this._LastPasswordFailureDate != value))
				{
					this.OnLastPasswordFailureDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordFailureDate = value;
					this.SendPropertyChanged("LastPasswordFailureDate");
					this.OnLastPasswordFailureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFailuresSinceLastSuccess", DbType="Int NOT NULL")]
		public int PasswordFailuresSinceLastSuccess
		{
			get
			{
				return this._PasswordFailuresSinceLastSuccess;
			}
			set
			{
				if ((this._PasswordFailuresSinceLastSuccess != value))
				{
					this.OnPasswordFailuresSinceLastSuccessChanging(value);
					this.SendPropertyChanging();
					this._PasswordFailuresSinceLastSuccess = value;
					this.SendPropertyChanged("PasswordFailuresSinceLastSuccess");
					this.OnPasswordFailuresSinceLastSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordChangedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordChangedDate
		{
			get
			{
				return this._PasswordChangedDate;
			}
			set
			{
				if ((this._PasswordChangedDate != value))
				{
					this.OnPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordChangedDate = value;
					this.SendPropertyChanged("PasswordChangedDate");
					this.OnPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationToken", DbType="NVarChar(128)")]
		public string PasswordVerificationToken
		{
			get
			{
				return this._PasswordVerificationToken;
			}
			set
			{
				if ((this._PasswordVerificationToken != value))
				{
					this.OnPasswordVerificationTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationToken = value;
					this.SendPropertyChanged("PasswordVerificationToken");
					this.OnPasswordVerificationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationTokenExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordVerificationTokenExpirationDate
		{
			get
			{
				return this._PasswordVerificationTokenExpirationDate;
			}
			set
			{
				if ((this._PasswordVerificationTokenExpirationDate != value))
				{
					this.OnPasswordVerificationTokenExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationTokenExpirationDate = value;
					this.SendPropertyChanged("PasswordVerificationTokenExpirationDate");
					this.OnPasswordVerificationTokenExpirationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="webpages_OAuthMembership")]
	public partial class Webpages_OAuthMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Provider;
		
		private string _ProviderUserId;
		
		private int _UserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProviderChanging(string value);
    partial void OnProviderChanged();
    partial void OnProviderUserIdChanging(string value);
    partial void OnProviderUserIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public Webpages_OAuthMembership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderUserId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderUserId
		{
			get
			{
				return this._ProviderUserId;
			}
			set
			{
				if ((this._ProviderUserId != value))
				{
					this.OnProviderUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderUserId = value;
					this.SendPropertyChanged("ProviderUserId");
					this.OnProviderUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="webpages_Roles")]
	public partial class Webpages_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _RoleName;
		
		private EntitySet<Webpages_UsersInRole> _Webpages_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public Webpages_Role()
		{
			this._Webpages_UsersInRoles = new EntitySet<Webpages_UsersInRole>(new Action<Webpages_UsersInRole>(this.attach_Webpages_UsersInRoles), new Action<Webpages_UsersInRole>(this.detach_Webpages_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_RoleId", Storage="_Webpages_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId", DeleteRule="NO ACTION")]
		public EntitySet<Webpages_UsersInRole> Webpages_UsersInRoles
		{
			get
			{
				return this._Webpages_UsersInRoles;
			}
			set
			{
				this._Webpages_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Webpages_UsersInRoles(Webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Webpages_Role = this;
		}
		
		private void detach_Webpages_UsersInRoles(Webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Webpages_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="webpages_UsersInRoles")]
	public partial class Webpages_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _RoleId;
		
		private EntityRef<Webpages_Role> _Webpages_Role;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public Webpages_UsersInRole()
		{
			this._Webpages_Role = default(EntityRef<Webpages_Role>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Webpages_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_RoleId", Storage="_Webpages_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Webpages_Role Webpages_Role
		{
			get
			{
				return this._Webpages_Role.Entity;
			}
			set
			{
				Webpages_Role previousValue = this._Webpages_Role.Entity;
				if (((previousValue != value) 
							|| (this._Webpages_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Webpages_Role.Entity = null;
						previousValue.Webpages_UsersInRoles.Remove(this);
					}
					this._Webpages_Role.Entity = value;
					if ((value != null))
					{
						value.Webpages_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Webpages_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fk_UserId", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Webpages_UsersInRoles.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Webpages_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
