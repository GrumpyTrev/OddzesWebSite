@{
    Layout = "~/_SiteLayout.cshtml";

    int competitionId = UrlData[ 0 ].AsInt();
    string competitionName = UrlData[ 1 ];
    bool matchPlay = UrlData[ 2 ].AsBool();
    bool locked = UrlData[ 3 ].AsBool();

    Page.Title = "Results for " + competitionName;

    Database db = Database.Open( "StarterSite" );
    IEnumerable< dynamic > games = db.Query( "SELECT * FROM Game WHERE Competition=@0 ORDER BY Date, Late", competitionId );

    // If this is a POST request, validate and process data
    if ( IsPost == true ) 
    {
        // Delete the entry specified by the competitionId and go back to the Results page
        db.Execute( "DELETE FROM Competition WHERE Id=@0", competitionId );

        // TO DO - why can't we just go back from here?
        Response.Redirect( "~/Results" );
    }
}

@section featured {
<section class="featured">
    <div class="content-wrapper">
        <hgroup class="title">
            <h1>@Page.Title.</h1>
        </hgroup>
        <p>
            Click on a game to display further details.
        </p>
    </div>
</section>
}

@if ( games.Any() == true )
{
    <div class="row">
        <div class="col-1">
            <table>
                <tr>
                    <th>When</th>
                    <th>Opponents</th>
                    <th>Score</th>
                </tr>
				@{
					string monthString = "";

					foreach ( dynamic game in games )
					{
						DateTime gameDate = game.Date;

						// Get month and year for this game
						string thisGameMonthString = gameDate.ToString( "MMM yyyy");

						// Already displaying games for this month?#
						if ( monthString != thisGameMonthString )
						{
							monthString = thisGameMonthString;
							<tr><td class="tdNoPad"><strong>@monthString</strong></td></tr>
						}

						int gameDay = gameDate.Day;

						<tr>
							<td class="tdNoPad">
								<a href="@Href( "~/Game", game.Id, matchPlay )">
									@( string.Format( " {0:ddd d}{1} {2} {3}", gameDate, ( ( ( gameDay % 10 == 1 ) && ( gameDay != 11 ) ) ? "st" :
									( ( gameDay % 10 == 2 ) && ( gameDay != 12 ) ) ? "nd" : ( ( gameDay % 10 == 3 ) && ( gameDay != 13 ) ) ? "rd" : "th" ),
									( game.Late == false ? "Early" : "Late" ), ( ( game.Complete == true ) ? "" : game.Lane == false ? "Left" : "Right" ) ) )
								</a>
							</td>
							<td class="tdNoPad"><a href="@Href( "~/Game", game.Id, matchPlay )">@game.Opponents</a></td>
							@if ( game.InProgress == true )
							{
								<td class="tdNoPad">GAME IN PROGRESS</td>
							}
							else
							{
								// Display the score if present - not available for older leagues
								if ( game.Us != -1 )
								{
									// For match play leagues the scores are stored as double the actual scores (due to halves being possible).
									// So display divided by two if required.
									if ( matchPlay == false )
									{
										<td class="tdNoPad"><a href="@Href( "~/Game", game.Id, matchPlay )">@game.Us - @game.Them</a></td>
									}
									else
									{
										<td class="tdNoPad"><a href="@Href( "~/Game", game.Id, matchPlay )">@( ( decimal )game.Us / 2 ) - @( ( decimal )game.Them / 2 )</a></td>
									}
								}
							}
						</tr>
					}
				}
            </table>
        </div>

        @{
            AverageDetails.Averages currentAverages = AverageDetails.Averages.CurrentAverages( db, competitionId );
            if ( currentAverages != null )
            {
            <div class="col-1">
                <h3>@( ( locked == true ) ? "Final averages" : "Current averages" )</h3>
                <table>
                    <tr>
                        <th>Name</th>
                        <th>Legs</th>
                        <th>Pins</th>
                        <th>Average</th>
                    </tr>
                    @foreach ( AverageDetails.Average avgData in currentAverages.AverageCollection )
                    {
                        <tr>
                            <td>@db.QueryValue( "SELECT Email FROM UserProfile WHERE UserId=@0", avgData.PlayerId )</td>
                            <td>@avgData.Legs</td>
                            <td>@avgData.Pins</td>
                            <td>@avgData.Avg</td>
                        </tr>
                    }
                </table>
            </div>
            }
        }
    </div>

}
else
{
<h3>No games in league</h3><br>
}

@if ( Roles.IsUserInRole( "Admin" ) == true )
{
    <form method="post">
        @if ( games.Any() == false )
        {
            <input type="submit" value="Delete league" id="submit" onclick="return confirm( 'Are you sure you want to delete this league?');">
        }
        else
        {
            <a href="#" class="btn disabled">Delete league</a>
        }

        <a href="@Href( "~/RenameCompetition", competitionId )" class="btn">Edit league details</a>
        <a href="@Href( "~/AddGame", competitionId, competitionName, matchPlay )" class="btn">Add game to league</a>
    </form>
}
