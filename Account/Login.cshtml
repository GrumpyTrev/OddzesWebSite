@* Remove this section if you are using bundling *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Log in";

    // Initialize general page variables
    var email = "";
    var password = "";

    var returnUrl = Request.QueryString[ "ReturnUrl" ];
    if ( returnUrl.IsEmpty() == true )
    {
        // Some external login providers always require a return URL value
        returnUrl = Href( "~/" );
    }

    // If this user is already logged in attempt to get out
    if ( WebSecurity.IsAuthenticated == true )
    {
        Context.RedirectLocal( returnUrl );
    }
    else
    {
        // Setup validation
        Validation.RequireField( "password", "You must specify a password." );
        Validation.RequireField( "email", "You must specify a user name." );

        // If this is a POST request, validate and process data
        if ( IsPost == true )
        {
            AntiForgery.Validate();
            if ( Validation.IsValid() == true )
            {
                email = Request.Form[ "email" ];
                password = Request.Form[ "password" ];

                if ( ( WebSecurity.UserExists( email ) == true ) && ( WebSecurity.GetPasswordFailuresSinceLastSuccess( email ) > 4 ) &&
                    ( WebSecurity.GetLastPasswordFailureDate( email ).AddSeconds( 60 ) > DateTime.UtcNow ) )
                {
                    Response.Redirect( "~/Account/AccountLockedOut" );
                }
                else
                {
                    // Check that the user name has a scorer or admin role
                    if ( ( Roles.IsUserInRole( email, "Scorer" ) == true ) || ( Roles.IsUserInRole( email, "Admin" ) == true ) )
                    {
                        // Attempt to log in using provided credentials
                        if ( WebSecurity.Login( email, password, false ) == true )
                        {
                            Context.RedirectLocal( returnUrl );
                        }
                        else
                        {
                            ModelState.AddFormError( "The user name or password provided is incorrect." );
                        }
                    }
                    else
                    {
                        ModelState.AddFormError( "The specified user is not a Scorer or Admin." );
                    }
                }
            }
        }
    }
}

<hgroup class="title">
    <h1>@Page.Title.</h1>
</hgroup>

<section id="loginForm">
    <form method="post">
        @AntiForgery.GetHtml()
        @* If one or more validation errors exist, show an error *@
        @Html.ValidationSummary( "Log in was unsuccessful. Please correct the errors and try again.", excludeFieldErrors: true, htmlAttributes: null )

        <fieldset>
            <legend>Log in to Your Account</legend>
            <ol>
                <li class="email">
                    <label for="email" @if (!ModelState.IsValidField( "email" )) {<text>class="error-label"</text>}>Name</label>
                    <input type="text" id="email" name="email" value="@Request.Form[ "email" ]" @Validation.For( "email" )/>
                    @* Write any password validation errors to the page *@
                    @Html.ValidationMessage( "email" )
                </li>
                <li class="password">
                    <label for="password" @if (!ModelState.IsValidField( "password" )) {<text>class="error-label"</text>}>Password</label>
                    <input type="password" id="password" name ="password" @Validation.For( "password" )/>
                    @* Write any password validation errors to the page *@
                    @Html.ValidationMessage( "password" )
                </li>
            </ol>
            <input type="submit" value="Log in" id="submit"/>
        </fieldset>
    </form>
    <p>
        <a href="~/Account/ForgotPassword">Did you forget your password?</a>
    </p>
</section>
